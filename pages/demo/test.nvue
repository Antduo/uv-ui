<template>
	<view class="wrap">
		<uv-toast ref="uvToast"></uv-toast>
		<uv-code :seconds="seconds" @end="end" @start="start" ref="uvCode" @change="codeChange"></uv-code>
		<uv-button @tap="getCode">{{tips}}</uv-button>
	</view>
</template>
<script>
	export default {
		data() {
			return {
				tips: '',
				seconds: 10
			}
		},
		methods: {
			codeChange(text) {
				this.tips = text;
			},
			getCode() {
				if (this.$refs.uvCode.canGetCode) {
					// 模拟向后端请求验证码
					uni.showLoading({
						title: '正在获取验证码'
					})
					setTimeout(() => {
						uni.hideLoading();
						// 这里此提示会被this.start()方法中的提示覆盖
						uni.$uv.toast('验证码已发送');
						// 通知验证码组件内部开始倒计时
						this.$refs.uvCode.start();
					}, 2000);
				} else {
					uni.$uv.toast('倒计时结束后再发送');
				}
			},
			end() {
				uni.$uv.toast('倒计时结束');
			},
			start() {
				uni.$uv.toast('倒计时开始');
			}
		}
	}
</script>
<style lang="scss">
	.wrap {
		padding: 24rpx;
	}
</style>